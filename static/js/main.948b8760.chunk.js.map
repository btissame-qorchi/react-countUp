{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useCountUp","duration","end","startOnMount","countUp","start","pauseResume","reset","update","className","onClick","style","color","fontWeight","fontSize","display","prefix","suffix","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAwBeA,MArBf,WAAgB,IAAD,EACuCC,qBAAW,CAC7DC,SAAS,EACTC,IAAI,IACJC,cAAa,IAHRC,EADM,EACNA,QAASC,EADH,EACGA,MAAOC,EADV,EACUA,YAAaC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,OAK3C,OACE,sBAAKC,UAAU,MAAf,UAGE,6BAAKL,IACL,wBAAQM,QAASL,EAAjB,mBACA,wBAAQK,QAASJ,EAAjB,0BACA,wBAAQI,QAASH,EAAjB,mBACA,wBAAQG,QAAS,kBAAIF,EAAO,OAA5B,oBACA,+BAAI,sBAAMG,MAAO,CAACC,MAAM,UAAUC,WAAW,IAAIC,SAAS,OAAOC,QAAQ,SAArE,mCAAJ,IAAgH,cAAC,IAAD,CAASb,IAAK,IAAKD,SAAU,EAAGI,MAAO,IAAKW,OAAO,cACnK,+BAAI,sBAAML,MAAO,CAACC,MAAM,UAAUC,WAAW,IAAIC,SAAS,OAAOC,QAAQ,SAArE,mCAAJ,IAAgH,cAAC,IAAD,CAASb,IAAK,IAAKD,SAAU,EAAGI,MAAO,GAAIY,OAAO,eCPzJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.948b8760.chunk.js","sourcesContent":["import React from \"react\";\nimport CountUp,{useCountUp} from 'react-countup';\n\nfunction App() {\n  const {countUp, start, pauseResume, reset, update}= useCountUp({\n    duration:4,\n    end:20000,\n    startOnMount:false,\n  })\n  return (\n    <div className=\"App\">\n      {/* default duration : 2s */}\n      {/* default start : 0 */}\n      <h1>{countUp}</h1>\n      <button onClick={start}>Start</button>\n      <button onClick={pauseResume}>Pause/Resume</button>\n      <button onClick={reset}>Reset</button>\n      <button onClick={()=>update(15000)}>Update</button>\n      <h2><span style={{color:'#963e3e',fontWeight:400,fontSize:'16px',display:'block'}}>CountUp with prefix :</span> <CountUp end={500} duration={5} start={100} prefix='â‚¬'/></h2>\n      <h2><span style={{color:'#963e3e',fontWeight:400,fontSize:'16px',display:'block'}}>CountUp with suffix :</span> <CountUp end={600} duration={5} start={50} suffix='MAD'/></h2>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}